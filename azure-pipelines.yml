# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: dev
    displayName: Dev
    jobs:
    - job: dev
      displayName: Dev
      steps:
        - task: DownloadSecureFile@1
          displayName: Download backend config file
          inputs:
            secureFile: 'dev-backend.hcl'
        - script: |
            terraform version
          displayName: Run terraform
  - stage: test
    displayName: Test
    jobs:
    - job: waitForTestValidation
      displayName: Wait for external validation
      pool: server
      timeoutInMinutes: 4320 # job times out in 3 days
      steps:
        - task: ManualValidation@0
          inputs:
            notifyUsers: 'somebody@somewhere.com'
            instructions: 'Please validate the build configuration and resume'
    - job: test
      displayName: Test
      steps:
        - task: DownloadSecureFile@1
          displayName: Download backend config file
          inputs:
            secureFile: 'test-backend.hcl'
        - script: |
            terraform version
          displayName: Run terraform
      dependsOn: waitForTestValidation
      condition: succeeded()
    condition: succeeded()
  - stage: prod
    displayName: Prod
    jobs:
    - job: waitForProdValidation
      displayName: Wait for external validation
      pool: server
      timeoutInMinutes: 4320 # job times out in 3 days
      steps:
        - task: ManualValidation@0
          inputs:
            notifyUsers: 'somebody@somewhere.com'
            instructions: 'Please validate the build configuration and resume'
    - job: prod
      displayName: Prod
      steps:
        - task: DownloadSecureFile@1
          displayName: Download backend config file
          inputs:
            secureFile: 'prod-backend.hcl'
        - script: |
            terraform version
          displayName: Run terraform
      dependsOn: waitForProdValidation
      condition: succeeded()
    condition: succeeded()